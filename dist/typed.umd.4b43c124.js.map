{"version":3,"sources":["../src/defaults.js","../src/initializer.js","../src/html-parser.js","../src/typed.js","../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["defaults","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","fadeOutClass","fadeOutDelay","loopCount","Infinity","showCursor","autoInsertCss","attr","bindInputFocusEvents","contentType","onBegin","self","onComplete","preStringTyped","onStringTyped","arrayPos","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","initializer","Initializer","_proto","prototype","load","el","elementId","document","querySelector","options","isInput","tagName","cursorChar","cursorBlinking","elContent","getAttribute","textContent","backDelay","fadeOut","isPaused","strings","s","trim","Array","slice","apply","children","length","i","stringsLength","innerHTML","currentElContent","this","getCurrentElContent","strPos","unshift","sequence","stopNum","loop","curLoop","status","curString","curStrPos","typingComplete","appendCursorAnimationCss","appendFadeOutAnimationCss","value","cssDataName","createElement","appendChild","css","body","htmlParser","HTMLParser","typeHtmlChars","curChar","substring","charAt","endTag","backSpaceHtmlChars","Typed","begin","toggle","pause","start","stop","toggleBlinking","typewrite","backspace","destroy","reset","restart","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","insertCursor","_this","shuffleStringsIfNeeded","bindFocusEvents","setTimeout","_this2","classList","contains","remove","humanize","humanizer","numChars","pauseTime","substr","test","skip","exec","parseInt","temporaryPause","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","setPauseStatus","nextString","_this3","complete","_this4","initFadeOut","curStringAtPosition","isTyping","isBlinking","add","speed","Math","round","random","sort","_this5","className","str","setAttribute","_this6","addEventListener","e","insertBefore","nextSibling","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","getElementById","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"typed.umd.4b43c124.js","sourceRoot":"..","sourcesContent":["/**\n * Defaults & options\n * @returns {object} Typed defaults & options\n * @public\n */\n\nconst defaults = {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: [\n    'These are the default values...',\n    'You know what you should do?',\n    'Use your own!',\n    'Have a great day!',\n  ],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * Before it begins typing\n   * @param {Typed} self\n   */\n  onBegin: (self) => {},\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {},\n};\n\nexport default defaults;\n","import defaults from './defaults.js';\n/**\n * Initialize the Typed object\n */\n\nexport default class Initializer {\n  /**\n   * Load up defaults & options on the Typed instance\n   * @param {Typed} self instance of Typed\n   * @param {object} options options object\n   * @param {string} elementId HTML element ID _OR_ instance of HTML element\n   * @private\n   */\n\n  load(self, options, elementId) {\n    // chosen element to manipulate text\n    if (typeof elementId === 'string') {\n      self.el = document.querySelector(elementId);\n    } else {\n      self.el = elementId;\n    }\n\n    self.options = { ...defaults, ...options };\n\n    // attribute to type into\n    self.isInput = self.el.tagName.toLowerCase() === 'input';\n    self.attr = self.options.attr;\n    self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n    // show cursor\n    self.showCursor = self.isInput ? false : self.options.showCursor;\n\n    // custom cursor\n    self.cursorChar = self.options.cursorChar;\n\n    // Is the cursor blinking\n    self.cursorBlinking = true;\n\n    // text content of element\n    self.elContent = self.attr\n      ? self.el.getAttribute(self.attr)\n      : self.el.textContent;\n\n    // html or plain text\n    self.contentType = self.options.contentType;\n\n    // typing speed\n    self.typeSpeed = self.options.typeSpeed;\n\n    // add a delay before typing starts\n    self.startDelay = self.options.startDelay;\n\n    // backspacing speed\n    self.backSpeed = self.options.backSpeed;\n\n    // only backspace what doesn't match the previous string\n    self.smartBackspace = self.options.smartBackspace;\n\n    // amount of time to wait before backspacing\n    self.backDelay = self.options.backDelay;\n\n    // Fade out instead of backspace\n    self.fadeOut = self.options.fadeOut;\n    self.fadeOutClass = self.options.fadeOutClass;\n    self.fadeOutDelay = self.options.fadeOutDelay;\n\n    // variable to check whether typing is currently paused\n    self.isPaused = false;\n\n    // input strings of text\n    self.strings = self.options.strings.map((s) => s.trim());\n\n    // div containing strings\n    if (typeof self.options.stringsElement === 'string') {\n      self.stringsElement = document.querySelector(self.options.stringsElement);\n    } else {\n      self.stringsElement = self.options.stringsElement;\n    }\n\n    if (self.stringsElement) {\n      self.strings = [];\n      self.stringsElement.style.cssText =\n        'clip: rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px;';\n\n      const strings = Array.prototype.slice.apply(self.stringsElement.children);\n      const stringsLength = strings.length;\n\n      if (stringsLength) {\n        for (let i = 0; i < stringsLength; i += 1) {\n          const stringEl = strings[i];\n          self.strings.push(stringEl.innerHTML.trim());\n        }\n      }\n    }\n\n    // character number position of current string\n    self.strPos = 0;\n\n    // If there is some text in the element\n    self.currentElContent = this.getCurrentElContent(self);\n\n    if (self.currentElContent && self.currentElContent.length > 0) {\n      self.strPos = self.currentElContent.length - 1;\n      self.strings.unshift(self.currentElContent);\n    }\n\n    // the order of strings\n    self.sequence = [];\n\n    // Set the order in which the strings are typed\n    for (let i in self.strings) {\n      self.sequence[i] = i;\n    }\n\n    // current array position\n    self.arrayPos = 0;\n\n    // index of string to stop backspacing on\n    self.stopNum = 0;\n\n    // Looping logic\n    self.loop = self.options.loop;\n    self.loopCount = self.options.loopCount;\n    self.curLoop = 0;\n\n    // shuffle the strings\n    self.shuffle = self.options.shuffle;\n\n    self.pause = {\n      status: false,\n      typewrite: true,\n      curString: '',\n      curStrPos: 0,\n    };\n\n    // When the typing is complete (when not looped)\n    self.typingComplete = false;\n\n    self.autoInsertCss = self.options.autoInsertCss;\n\n    if (self.autoInsertCss) {\n      this.appendCursorAnimationCss(self);\n      this.appendFadeOutAnimationCss(self);\n    }\n  }\n\n  getCurrentElContent(self) {\n    let elContent = '';\n    if (self.attr) {\n      elContent = self.el.getAttribute(self.attr);\n    } else if (self.isInput) {\n      elContent = self.el.value;\n    } else if (self.contentType === 'html') {\n      elContent = self.el.innerHTML;\n    } else {\n      elContent = self.el.textContent;\n    }\n    return elContent;\n  }\n\n  appendCursorAnimationCss(self) {\n    const cssDataName = 'data-typed-js-cursor-css';\n\n    if (!self.showCursor || document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.setAttribute(cssDataName, 'true');\n\n    css.innerHTML = `\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      `;\n\n    document.body.appendChild(css);\n  }\n\n  appendFadeOutAnimationCss(self) {\n    const cssDataName = 'data-typed-fadeout-js-css';\n\n    if (!self.fadeOut || document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.setAttribute(cssDataName, 'true');\n\n    css.innerHTML = `\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      `;\n\n    document.body.appendChild(css);\n  }\n}\n\nexport let initializer = new Initializer();\n","/**\n * TODO: These methods can probably be combined somehow\n * Parse HTML tags & HTML Characters\n */\n\nexport default class HTMLParser {\n  /**\n   * Type HTML tags & HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n\n  typeHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substring(curStrPos).charAt(0);\n    if (curChar === '<' || curChar === '&') {\n      let endTag = '';\n      if (curChar === '<') {\n        endTag = '>';\n      } else {\n        endTag = ';';\n      }\n      while (curString.substring(curStrPos + 1).charAt(0) !== endTag) {\n        curStrPos++;\n        if (curStrPos + 1 > curString.length) {\n          break;\n        }\n      }\n      curStrPos++;\n    }\n    return curStrPos;\n  }\n\n  /**\n   * Backspace HTML tags and HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n  backSpaceHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substring(curStrPos).charAt(0);\n    if (curChar === '>' || curChar === ';') {\n      let endTag = '';\n      if (curChar === '>') {\n        endTag = '<';\n      } else {\n        endTag = '&';\n      }\n      while (curString.substring(curStrPos - 1).charAt(0) !== endTag) {\n        curStrPos--;\n        if (curStrPos < 0) {\n          break;\n        }\n      }\n      curStrPos--;\n    }\n    return curStrPos;\n  }\n}\n\nexport let htmlParser = new HTMLParser();\n","import { initializer } from './initializer.js';\nimport { htmlParser } from './html-parser.js';\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText('');\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /**\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // If the strPos is 0, we're starting from the beginning of a string\n      // else, we're starting with a previous string that needs to be backspaced first\n      if (this.strPos === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        this.backspace(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      }\n    }, this.startDelay);\n  }\n\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 0;\n      let substr = curString.substring(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === '^') {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === '`') {\n        while (curString.substring(curStrPos + numChars).charAt(0) !== '`') {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substring(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    this.timeout = setTimeout(() => {\n      this.backspace(curString, curStrPos);\n    }, this.backDelay);\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, false);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substring(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substring(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos++;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add('typed-cursor--blink');\n    } else {\n      this.cursor.classList.remove('typed-cursor--blink');\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText('');\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === 'html') {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener('focus', (e) => {\n      this.stop();\n    });\n    this.el.addEventListener('blur', (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement('span');\n    this.cursor.className = 'typed-cursor';\n    this.cursor.setAttribute('aria-hidden', true);\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}