{"version":3,"sources":["webpack://PureCounter/webpack/universalModuleDefinition","webpack://PureCounter/js/purecounter_vanilla.js","webpack://PureCounter/webpack/bootstrap","webpack://PureCounter/webpack/startup","../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["root","factory","exports","module","define","amd","self","setOptions","config","baseConfig","newConfig","key","hasOwnProperty","val","parseValue","match","Object","assign","startCounter","element","incrementsPerStep","end","start","duration","delay","countMode","currentCount","innerHTML","formatNumber","once","setAttribute","counterWorker","setInterval","nextNum","number","steps","mode","parseFloat","nextNumber","pulse","setTimeout","clearInterval","getFilesizeThreshold","baseNumber","index","Math","pow","strConfig","minimumFractionDigits","decimals","maximumFractionDigits","locale","formater","undefined","filesizing","currency","abs","Number","symbol","limit","unit","value","i","toFixed","convertNumber","separator","replace","g1","g2","g3","g4","result","sep","RegExp","decimal","applySeparator","toLocaleString","parseInt","toString","data","test","elementIsInView","top","offsetTop","left","offsetLeft","width","offsetWidth","height","offsetHeight","offsetParent","window","pageYOffset","pageXOffset","innerHeight","innerWidth","intersectionListenerSupported","IntersectionObserverEntry","prototype","options","configs","legacy","selector","configOptions","registerEventListeners","elements","document","querySelectorAll","length","intersectObserver","IntersectionObserver","animateElements","bind","this","rootMargin","threshold","forEach","observe","addEventListener","animateLegacy","e","passive","parseConfig","observer","elm","target","elementConfig","intersectionRatio","configValues","filter","call","attributes","attr","name","map","toLowerCase","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"purecounter_vanilla.6894738f.js","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PureCounter\"] = factory();\n\telse\n\t\troot[\"PureCounter\"] = factory();\n})(self, function() {\nreturn ","/** This function is for create and merge configuration */\r\nfunction setOptions(config, baseConfig = {}) {\r\n    // Create new Config object;\r\n    var newConfig = {};\r\n\r\n    // Loop config items to set it value into newConfig\r\n    for (var key in config) {\r\n        // if baseConfig is set, only accept the baseconfig property\r\n        if (baseConfig != {} && !baseConfig.hasOwnProperty(key)) continue;\r\n        // parse the config value\r\n        var val = parseValue(config[key]);\r\n        // set the newConfig property value\r\n        newConfig[key] = val;\r\n        // Exclusive for 'duration' or 'pulse' property, recheck the value\r\n        // If it's not a boolean, just set it to milisecond unit\r\n        if (key.match(/duration|pulse/)) {\r\n            newConfig[key] = typeof val != \"boolean\" ? val * 1000 : val;\r\n        }\r\n    }\r\n\r\n    // Finally, we can just merge the baseConfig (if any), with newConfig.\r\n    return Object.assign({}, baseConfig, newConfig);\r\n}\r\n\r\n/** This is the the counter method */\r\nfunction startCounter(element, config) {\r\n    // First, get the increments step\r\n    var incrementsPerStep =\r\n        (config.end - config.start) / (config.duration / config.delay);\r\n    // Next, set the counter mode (Increment or Decrement)\r\n    var countMode = \"inc\";\r\n\r\n    // Set mode to 'decrement' and 'increment step' to minus if start is larger than end\r\n    if (config.start > config.end) {\r\n        countMode = \"dec\";\r\n        incrementsPerStep *= -1;\r\n    }\r\n\r\n    // Next, determine the starting value\r\n    var currentCount = parseValue(config.start);\r\n    // And then print it's value to the page\r\n    element.innerHTML = formatNumber(currentCount, config);\r\n\r\n    // If the config 'once' is true, then set the 'duration' to 0\r\n    if (config.once === true) {\r\n        element.setAttribute(\"data-purecounter-duration\", 0);\r\n    }\r\n\r\n    // Now, start counting with counterWorker using Interval method based on delay\r\n    var counterWorker = setInterval(() => {\r\n        // First, determine the next value base on current value, increment value, and count mode\r\n        var nextNum = nextNumber(currentCount, incrementsPerStep, countMode);\r\n        // Next, print that value to the page\r\n        element.innerHTML = formatNumber(nextNum, config);\r\n        // Now set that value to the current value, because it's already printed\r\n        currentCount = nextNum;\r\n\r\n        // If the value is larger or less than the 'end' (base on mode), then  print the end value and stop the Interval\r\n        if (\r\n            (currentCount >= config.end && countMode == \"inc\") ||\r\n            (currentCount <= config.end && countMode == \"dec\")\r\n        ) {\r\n            element.innerHTML = formatNumber(config.end, config);\r\n            // If 'pulse' is set ignore the 'once' config\r\n            if (config.pulse) {\r\n                // First set the 'duration' to zero\r\n                element.setAttribute(\"data-purecounter-duration\", 0);\r\n                // Next, use timeout to reset it duration back based on 'pulse' config\r\n                setTimeout(() => {\r\n                    element.setAttribute(\r\n                        \"data-purecounter-duration\",\r\n                        config.duration / 1000\r\n                    );\r\n                }, config.pulse);\r\n            }\r\n            clearInterval(counterWorker);\r\n        }\r\n    }, config.delay);\r\n}\r\n\r\n/** This function is to get the next number */\r\nfunction nextNumber(number, steps, mode = \"inc\") {\r\n    // First, get the exact value from the number and step (int or float)\r\n    number = parseValue(number);\r\n    steps = parseValue(steps);\r\n\r\n    // Last, get the next number based on current number, increment step, and count mode\r\n    // Always return it as float\r\n    return parseFloat(mode === \"inc\" ? number + steps : number - steps);\r\n}\r\n\r\n/** This function is to convert number into currency format */\r\nfunction convertNumber(number, config) {\r\n    /** Use converter if filesizing or currency is on */\r\n    if (config.filesizing || config.currency) {\r\n        number = Math.abs(Number(number)); // Get the absolute value of number\r\n\r\n        var baseNumber = 1000, // Base multiplying treshold\r\n            symbol =\r\n                config.currency && typeof config.currency === \"string\"\r\n                    ? config.currency\r\n                    : \"\", // Set the Currency Symbol (if any)\r\n            limit = config.decimals || 1, // Set the decimal limit (default is 1)\r\n            unit = [\"\", \"K\", \"M\", \"B\", \"T\"], // Number unit based exponent threshold\r\n            value = \"\"; // Define value variable\r\n\r\n        /** Changes base number and its unit for filesizing */\r\n        if (config.filesizing) {\r\n            baseNumber = 1024; // Use 1024 instead of 1000\r\n            unit = [\"bytes\", \"KB\", \"MB\", \"GB\", \"TB\"]; // Change to 'bytes' unit\r\n        }\r\n\r\n        /** Set value based on the threshold */\r\n        for (var i = 4; i >= 0; i--) {\r\n            // If the exponent is 0\r\n            if (i === 0) value = `${number.toFixed(limit)} ${unit[i]}`;\r\n            // If the exponent is above zero\r\n            if (number >= getFilesizeThreshold(baseNumber, i)) {\r\n                value = `${(number / getFilesizeThreshold(baseNumber, i)).toFixed(\r\n                    limit\r\n                )} ${unit[i]}`;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Apply symbol before the value and return it as string\r\n        return symbol + value;\r\n    } else {\r\n        /** Return its value as float if not using filesizing or currency*/\r\n        return parseFloat(number);\r\n    }\r\n}\r\n\r\n/** This function will get the given base.  */\r\nfunction getFilesizeThreshold(baseNumber, index) {\r\n    return Math.pow(baseNumber, index);\r\n}\r\n\r\n/** This function is to get the last formated number */\r\nfunction applySeparator(value, config) {\r\n    // Get replaced value based on it's separator/symbol.\r\n    function replacedValue(val, separator) {\r\n        // Well this is my regExp for detecting the Thausands Separator\r\n        // I use 3 groups to determine it's separator\r\n        // THen the group 4 is to get the decimals value\r\n        var separatorRegExp =\r\n            /^(?:(\\d{1,3},(?:\\d{1,3},?)*)|(\\d{1,3}\\.(?:\\d{1,3}\\.?)*)|(\\d{1,3}(?:\\s\\d{1,3})*))([\\.,]?\\d{0,2}?)$/gi;\r\n\r\n        return val.replace(separatorRegExp, function (match, g1, g2, g3, g4) {\r\n            // set initial result value\r\n            var result = \"\",\r\n                sep = \"\";\r\n            if (g1 !== undefined) {\r\n                // Group 1 is using comma as thausands separator, and period as decimal separator\r\n                result = g1.replace(new RegExp(/,/gi, \"gi\"), separator);\r\n                sep = \",\";\r\n            } else if (g2 !== undefined) {\r\n                // Group 2 is using period as thausands separator, and comma as decimal separator\r\n                result = g2.replace(new RegExp(/\\./gi, \"gi\"), separator);\r\n            } else if (g3 !== undefined) {\r\n                // Group 3 is using space as thausands separator, and comma as decimal separator\r\n                result = g3.replace(new RegExp(/ /gi, \"gi\"), separator);\r\n            }\r\n            if (g4 !== undefined) {\r\n                var decimal = sep !== \",\" ? (separator !== \",\" ? \",\" : \".\") : \".\";\r\n                result +=\r\n                    g4 !== undefined\r\n                        ? g4.replace(new RegExp(/\\.|,/gi, \"gi\"), decimal)\r\n                        : \"\";\r\n            }\r\n            // Returning result value;\r\n            return result;\r\n        });\r\n    }\r\n    // If config formater is not false, then apply separator\r\n    if (config.formater) {\r\n        // Now get the separator symbol\r\n        var symbol = config.separator // if config separator is setted\r\n            ? typeof config.separator === \"string\" // Check the type of value\r\n                ? config.separator // If it's type is string, then apply it's value\r\n                : \",\" // If it's not string (boolean), then apply comma as default separator\r\n            : \"\";\r\n        // Special exception when locale is not 'en-US' but separator value is 'true'\r\n        // Use it's default locale thausands separator.\r\n        if (config.formater !== \"en-US\" && config.separator === true) {\r\n            return value;\r\n        }\r\n        // Return the replaced Value based on it's symbol\r\n        return replacedValue(value, symbol);\r\n    }\r\n    // If config formater is false, then return it's default value\r\n    return value;\r\n}\r\n\r\n/** This function is to get formated number to be printed in the page */\r\nfunction formatNumber(number, config) {\r\n    // This is the configuration for 'toLocaleString' method\r\n    var strConfig = {\r\n        minimumFractionDigits: config.decimals,\r\n        maximumFractionDigits: config.decimals,\r\n    };\r\n    // Get locale from config formater\r\n    var locale = typeof config.formater === \"string\" ? config.formater : undefined;\r\n\r\n    // Set and convert the number base on its config.\r\n    number = convertNumber(number, config);\r\n\r\n    // Now format the number to string base on it's locale\r\n    number = config.formater\r\n        ? number.toLocaleString(locale, strConfig)\r\n        : parseInt(number).toString();\r\n\r\n    // Last, apply the number separator using number as string\r\n    return applySeparator(number, config);\r\n}\r\n\r\n/** This function is to get the parsed value */\r\nfunction parseValue(data) {\r\n    // If number with dot (.), will be parsed as float\r\n    if (/^[0-9]+\\.[0-9]+$/.test(data)) {\r\n        return parseFloat(data);\r\n    }\r\n    // If just number, will be parsed as integer\r\n    if (/^[0-9]+$/.test(data)) {\r\n        return parseInt(data);\r\n    }\r\n    // If it's boolean string, will be parsed as boolean\r\n    if (/^true|false/i.test(data)) {\r\n        return /^true/i.test(data);\r\n    }\r\n    // Return it's value as default\r\n    return data;\r\n}\r\n\r\n// This function is to detect the element is in view or not.\r\nfunction elementIsInView(element) {\r\n    var top = element.offsetTop;\r\n    var left = element.offsetLeft;\r\n    var width = element.offsetWidth;\r\n    var height = element.offsetHeight;\r\n\r\n    while (element.offsetParent) {\r\n        element = element.offsetParent;\r\n        top += element.offsetTop;\r\n        left += element.offsetLeft;\r\n    }\r\n\r\n    return (\r\n        top >= window.pageYOffset &&\r\n        left >= window.pageXOffset &&\r\n        top + height <= window.pageYOffset + window.innerHeight &&\r\n        left + width <= window.pageXOffset + window.innerWidth\r\n    );\r\n}\r\n\r\n/** Just some condition to check browser Intersection Support */\r\nfunction intersectionListenerSupported() {\r\n    return (\r\n        \"IntersectionObserver\" in window &&\r\n        \"IntersectionObserverEntry\" in window &&\r\n        \"intersectionRatio\" in window.IntersectionObserverEntry.prototype\r\n    );\r\n}\r\n\r\n/** Initialize PureCounter */\r\nfunction PureCounter(options = {}) {\r\n    var configs = {\r\n        start: 0, // Starting number [uint]\r\n        end: 100, // End number [uint]\r\n        duration: 2000, // Count duration [milisecond]\r\n        delay: 10, // Count delay [milisecond]\r\n        once: true, // Counting at once or recount when scroll [boolean]\r\n        pulse: false, // Pulse count for certain time [boolean|milisecond]\r\n        decimals: 0, // Decimal places [uint]\r\n        legacy: true, // If this is true it will use the scroll event listener on browsers\r\n        filesizing: false, // Is it for filesize?\r\n        currency: false, // Is it for currency? Use it for set the symbol too [boolean|char|string]\r\n        separator: false, // Do you want to use thausands separator? use it for set the symbol too [boolean|char|string]\r\n        formater: \"us-US\", // Number toLocaleString locale/formater, by default is \"en-US\" [string|boolean:false]\r\n        selector: \".purecounter\", // HTML query selector for spesific element\r\n    };\r\n    var configOptions = setOptions(options, configs);\r\n\r\n    function registerEventListeners() {\r\n        /** Get all elements with class 'purecounter' */\r\n        var elements = document.querySelectorAll(configOptions.selector);\r\n        /** Return if no elements */\r\n        if (elements.length === 0) {\r\n            return;\r\n        }\r\n\r\n        /** Run animateElements base on Intersection Support */\r\n        if (intersectionListenerSupported()) {\r\n            var intersectObserver = new IntersectionObserver(animateElements.bind(this), {\r\n                root: null,\r\n                rootMargin: \"20px\",\r\n                threshold: 0.5,\r\n            });\r\n\r\n            elements.forEach((element) => {\r\n                intersectObserver.observe(element);\r\n            });\r\n        } else {\r\n            if (window.addEventListener) {\r\n                animateLegacy(elements);\r\n                window.addEventListener(\r\n                    \"scroll\",\r\n                    function (e) {\r\n                        animateLegacy(elements);\r\n                    },\r\n                    { passive: true }\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /** This legacy to make Purecounter use very lightweight & fast */\r\n    function animateLegacy(elements) {\r\n        elements.forEach((element) => {\r\n            var config = parseConfig(element);\r\n            if (config.legacy === true && elementIsInView(element)) {\r\n                animateElements([element]);\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Main Element Count Animation */\r\n    function animateElements(elements, observer) {\r\n        elements.forEach((element) => {\r\n            var elm = element.target || element; // Just make sure which element will be used\r\n            var elementConfig = parseConfig(elm); // Get config value on that element\r\n\r\n            // If duration is less than or equal zero, just format the 'end' value\r\n            if (elementConfig.duration <= 0) {\r\n                return (elm.innerHTML = formatNumber(elementConfig.end, elementConfig));\r\n            }\r\n\r\n            if (\r\n                (!observer && !elementIsInView(element)) ||\r\n                (observer && element.intersectionRatio < 0.5)\r\n            ) {\r\n                var value =\r\n                    elementConfig.start > elementConfig.end\r\n                        ? elementConfig.end\r\n                        : elementConfig.start;\r\n                return (elm.innerHTML = formatNumber(value, elementConfig));\r\n            }\r\n\r\n            // If duration is more than 0, then start the counter\r\n            setTimeout(() => {\r\n                return startCounter(elm, elementConfig);\r\n            }, elementConfig.delay);\r\n        });\r\n    }\r\n\r\n    /** This function is to generate the element Config */\r\n    function parseConfig(element) {\r\n        // First, we need to declare the base Config\r\n        // This config will be used if the element doesn't have config\r\n        var baseConfig = configOptions;\r\n\r\n        // Next, get all 'data-precounter-*' attributes value. Store to array\r\n        var configValues = [].filter.call(element.attributes, function (attr) {\r\n            return /^data-purecounter-/.test(attr.name);\r\n        });\r\n\r\n        // Now, we create element config as an object\r\n        var elementConfig =\r\n            configValues.length != 0\r\n                ? Object.assign(\r\n                      {},\r\n                      ...configValues.map(({ name, value }) => {\r\n                          var key = name.replace(\"data-purecounter-\", \"\").toLowerCase(),\r\n                              val = parseValue(value);\r\n\r\n                          return { [key]: val };\r\n                      })\r\n                  )\r\n                : {};\r\n\r\n        // Last setOptions and return\r\n        return setOptions(elementConfig, baseConfig);\r\n    }\r\n\r\n    /** Run the initial function */\r\n    registerEventListeners();\r\n}\r\n\r\nmodule.exports = PureCounter;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(638);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}